services:
  apiserver:
    image: fonoster/apiserver:latest
    restart: unless-stopped
    command: >
      sh -c "
      mkdir -p /opt/fonoster/keys &&
      cp -f /keys/* /opt/fonoster/keys/ &&
      chmod 644 /opt/fonoster/keys/*.pem &&
      ls -la /opt/fonoster/keys &&
      exec dockerize -wait tcp://postgres:5432 -timeout 60s docker-entrypoint.sh
      "
    environment:
      - APISERVER_APP_URL
      - APISERVER_ASTERISK_ARI_PROXY_URL
      - APISERVER_ASTERISK_ARI_SECRET
      - APISERVER_ASTERISK_ARI_USERNAME
      - APISERVER_AUTHZ_SERVICE_ENABLED
      - APISERVER_AUTHZ_SERVICE_HOST
      - APISERVER_AUTHZ_SERVICE_METHODS
      - APISERVER_AUTHZ_SERVICE_PORT
      - APISERVER_CLOAK_ENCRYPTION_KEY
      - APISERVER_DATABASE_URL
      - APISERVER_IDENTITY_DATABASE_URL
      - APISERVER_IDENTITY_ISSUER
      - APISERVER_IDENTITY_CONTACT_VERIFICATION_REQUIRED
      - APISERVER_IDENTITY_TWO_FACTOR_AUTHENTICATION_REQUIRED
      - APISERVER_IDENTITY_WORKSPACE_INVITE_EXPIRATION
      - APISERVER_IDENTITY_WORKSPACE_INVITE_FAIL_URL
      - APISERVER_IDENTITY_WORKSPACE_INVITE_URL
      - APISERVER_IDENTITY_RESET_PASSWORD_URL
      - APISERVER_INFLUXDB_INIT_ORG
      - APISERVER_INFLUXDB_INIT_PASSWORD
      - APISERVER_INFLUXDB_INIT_TOKEN
      - APISERVER_INFLUXDB_INIT_USERNAME
      - APISERVER_INFLUXDB_URL
      - APISERVER_LOGS_FORMAT
      - APISERVER_LOGS_LEVEL
      - APISERVER_LOGS_TRANSPORT
      - APISERVER_NATS_URL
      - APISERVER_OWNER_EMAIL
      - APISERVER_OWNER_NAME
      - APISERVER_OWNER_PASSWORD
      - APISERVER_SMTP_AUTH_PASS
      - APISERVER_SMTP_AUTH_USER
      - APISERVER_SMTP_HOST
      - APISERVER_SMTP_PORT
      - APISERVER_SMTP_SECURE
      - APISERVER_SMTP_SENDER
      - APISERVER_TWILIO_ACCOUNT_SID
      - APISERVER_TWILIO_AUTH_TOKEN
      - APISERVER_TWILIO_PHONE_NUMBER
    ports:
      - 50051:50051
    volumes:
      - ./config/keys:/keys
      - ./config/integrations.json:/opt/fonoster/integrations.json:ro

  autopilot:
    image: fonoster/autopilot:latest
    restart: unless-stopped
    ports:
      - 50061:50061
    environment:
      - AUTOPILOT_AWS_S3_ACCESS_KEY_ID
      - AUTOPILOT_AWS_S3_ENDPOINT
      - AUTOPILOT_AWS_S3_REGION
      - AUTOPILOT_AWS_S3_SECRET_ACCESS_KEY
      - AUTOPILOT_CONVERSATION_PROVIDER
      - AUTOPILOT_KNOWLEDGE_BASE_ENABLED
      - AUTOPILOT_LOGS_FORMAT
      - AUTOPILOT_LOGS_LEVEL
      - AUTOPILOT_LOGS_TRANSPORT
      - AUTOPILOT_OPENAI_API_KEY
      - AUTOPILOT_UNSTRUCTURED_API_KEY
      - AUTOPILOT_UNSTRUCTURED_API_URL
    volumes:
      - ./config/integrations.json:/opt/fonoster/integrations.json:ro

  routr:
    image: fonoster/routr-one:latest
    restart: unless-stopped
    environment:
      DATABASE_URL: ${ROUTR_DATABASE_URL}
      EXTERNAL_ADDRS: ${ROUTR_EXTERNAL_ADDRS}
      LOGS_FORMAT: ${ROUTR_LOGS_FORMAT}
      LOGS_LEVEL: ${ROUTR_LOGS_LEVEL}
      LOGS_TRANSPORT: ${ROUTR_LOGS_TRANSPORT}
      NATS_PUBLISHER_ENABLED: true
      NATS_PUBLISHER_URL: ${ROUTR_NATS_PUBLISHER_URL}
      RTPENGINE_HOST: ${ROUTR_RTPENGINE_HOST}
      START_INTERNAL_DB: "false"
    ports:
      - 51907:51907
      - 51908:51908
      - 5060:5060/udp
      - 5060-5063:5060-5063

  rtpengine:
    image: fonoster/rtpengine:latest
    restart: unless-stopped
    platform: linux/x86_64
    ports: 
      - 10000-10100:10000-10100/udp
      - 8081:8080
    environment:
      PORT_MAX: ${RTPENGINE_PORT_MAX}
      PORT_MIN: ${RTPENGINE_PORT_MIN}
      PUBLIC_IP: ${RTPENGINE_PUBLIC_IP}

  asterisk:
    image: fonoster/asterisk:latest
    restart: unless-stopped
    environment:
      ARI_PROXY_URL: ${ASTERISK_ARI_PROXY_URL}
      ARI_SECRET: ${ASTERISK_ARI_SECRET}
      ARI_USERNAME: ${ASTERISK_ARI_USERNAME}
      CODECS: ${ASTERISK_CODECS}
      DTMF_MODE: ${ASTERISK_DTMF_MODE}
      RTP_PORT_END: ${ASTERISK_RTP_PORT_END}
      RTP_PORT_START: ${ASTERISK_RTP_PORT_START}
      SIPPROXY_HOST: ${ASTERISK_SIPPROXY_HOST}
      SIPPROXY_PORT: ${ASTERISK_SIPPROXY_PORT}
      SIPPROXY_SECRET: ${ASTERISK_SIPPROXY_SECRET}
      SIPPROXY_USERNAME: ${ASTERISK_SIPPROXY_USERNAME}
    ports:
      - 6060:6060
      - 8088:8088

  postgres:
    image: postgres:16.2-alpine
    restart: unless-stopped
    environment:
      PGTZ: UTC
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      TZ: UTC
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data

  influxdb:
    image: influxdb:2
    restart: unless-stopped
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_INIT_TOKEN}
      DOCKER_INFLUXDB_INIT_BUCKET: calls
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_INIT_ORG}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_INIT_PASSWORD}
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_INIT_USERNAME}
    volumes:
      - influxdb:/var/lib/influxdb2

  nats:
    image: nats:latest
    restart: unless-stopped
    ports:
      - 4222:4222

  envoy:
    image: envoyproxy/envoy:v1.31.0
    restart: unless-stopped
    volumes:
      - ./config/envoy.yaml:/etc/envoy/envoy.yaml:ro
    ports:
      - 8449:8449
      # - 443:443  # Comentando esta linha para evitar conflito de porta

  webui:
    image: fonoster/webui:latest
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://apiserver:50051
    ports:
      - 8282:80

  adminer:
    image: adminer:latest
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    ports:
      - 8283:8080

volumes:
  db:
  influxdb: 